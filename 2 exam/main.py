# ### –í–æ–ø—Ä–æ—Å—ã

# –í–æ–ø—Ä–æ—Å 1. –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –≤ Python? (list)

# #–û—Ç–≤–µ—á–∞—Ç—å:
# –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞ –º–æ–∂–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:
# spisok = []
# –í–æ–ø—Ä–æ—Å 2. –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –¥–ª–∏–Ω—É —Å–ø–∏—Å–∫–∞ –≤ Python?

# #–û—Ç–≤–µ—á–∞—Ç—å:
# —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–ª–∏–Ω—É —Å–ø–∏—Å–∫–∞ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ len()
# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:
# uzunligi = ['anvar','akbar','lochin','behruz']
# spisok_uzunligi= len(uzunligi)
# print(spisok_uzunligi)
# –í–æ–ø—Ä–æ—Å 3: –ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞?

# #–û—Ç–≤–µ—á–∞—Ç—å:
# –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–µ—Ç–æ–¥ append()
# # –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:
# qoshish_metodi = ['–∞–Ω–Ω–∞','–≤–∞–Ω—è','–∫—Ä–∏—Å—Ç–∏–Ω–∞','—Å–∞—à–∞']
# qoshish_metodi.append('–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞')
# print(qoshish_metodi)
# –í–æ–ø—Ä–æ—Å 4: –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –≤ —Å–ø–∏—Å–∫–µ –ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É –∏–Ω–¥–µ–∫—Å—É?

# #–û—Ç–≤–µ—á–∞—Ç—å:
# –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –≤ —Å–ø–∏—Å–∫–µ –ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É –∏–Ω–¥–µ–∫—Å—É , –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —Å–∫–æ–±–∫–∏
# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:
# raqam = [1,2,3,4,5,6,7] 

# print(raqam[3])
# –í–æ–ø—Ä–æ—Å 5: –ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞ –ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É –∏–Ω–¥–µ–∫—Å—É?

# #–û—Ç–≤–µ—á–∞—Ç—å:
# –ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞ –ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É –∏–Ω–¥–µ–∫—Å—É –≤ Python, –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ insert()
# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:
# spisok2 = []
# mesto = int(input())
# i = input()
# spisok2.insert(mesto, i)
# print(spisok2)

# –í–æ–ø—Ä–æ—Å 6. –ß—Ç–æ —Ç–∞–∫–æ–µ —Å–ª–æ–≤–∞—Ä—å (dict) –≤ Python?

# #–û—Ç–≤–µ—á–∞—Ç—å:
## –°–ª–æ–≤–∞—Ä–∏ –Ω–∞ Python –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º –ø–æ –∫–ª—é—á—É. –û–Ω–∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –±—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º, –ø–æ—Å–∫–æ–ª—å–∫—É –≤–Ω—É—Ç—Ä–∏ —Å–ª–æ–≤–∞—Ä—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ö—ç—à-—Ç–∞–±–ª–∏—Ü–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–ª—é—á–µ–π –∏ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–π
# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:
# my_dict = {"name": "John", "age": 25, "city": "New York"}
# print(my_dict["name"]) 
# print(my_dict.get("age"))  
# print(my_dict)  
# –í–æ–ø—Ä–æ—Å 7: –ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –≤ —Å–ª–æ–≤–∞—Ä—å?

# #–û—Ç–≤–µ—á–∞—Ç—å:
## –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –≤ —Å–ª–æ–≤–∞—Ä—å Python, –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä –ø—Ä–∏—Å–≤–æ–µ–Ω–∏—è.
# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:
# my_dict = {"name": "Kate", "age": 10}
# my_dict["city"] = "Moskow"
# print(my_dict)

# –í–æ–ø—Ä–æ—Å 8: –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –∫–ª—é—á–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ?

# #–û—Ç–≤–µ—á–∞—Ç—å:
# –ß—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è –≤ —Å–ª–æ–≤–∞—Ä–µ Python, –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä –¥–æ—Å—Ç—É–ø–∞ –∫ —ç–ª–µ–º–µ–Ω—Ç—É []–∏–ª–∏ –º–µ—Ç–æ–¥—É get()
# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:
# my_dict = {"name": "John", "age": 25}
# value = my_dict["name"]
# print(value)  

# –í–æ–ø—Ä–æ—Å 9: –ö–∞–∫ —É–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –∏–∑ —Å–ª–æ–≤–∞—Ä—è?

# #–û—Ç–≤–µ—á–∞—Ç—å:
# –ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –∏–∑ —Å–ª–æ–≤–∞—Ä—è –≤ Python, –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä  –º–µ—Ç–æ–¥ remove()
# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:
# dist = {'kate', 'pasha'}
# dist.remove('pasha')
# print(dist)

# –í–æ–ø—Ä–æ—Å 10. –ß—Ç–æ —Ç–∞–∫–æ–µ –∫–æ—Ä—Ç–µ–∂ –≤ Python?

# #–û—Ç–≤–µ—á–∞—Ç—å:
# –ö–æ—Ä—Ç–µ–∂–≤ Python ‚Äî —ç—Ç–æ –¥–∞

# –û—Å–Ω–æ–≤–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∫–æ—Ä—Ç–µ–∂–µ–π –≤ Python:

# –ö–æ—Ä—Ç–µ–∂–∏ –Ω–µ–∏–∑–º–µ–Ω–Ω—ã
# –ö–æ—Ä—Ç–µ–∂–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—é –∏ —Å—Ä–µ–∑—ã, –∞ —Ç–∞–∫–∂–µ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ —Ü–∏–∫–ª–∞—Ö –∏
# –ö–æ—Ä—Ç–µ–∂–∏ –∑–∞–Ω–∏–º–∞—é—Ç –º–µ–Ω—å—à–∏–π –æ–±—ä–µ–º –ø–∞–º—è—Ç–∏, —á–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –∏ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã –≤ —Ç–µ—Ö —Å–ª—É—á–∞—è—Ö, –∫–æ–≥–¥–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö.
# #
#
#
# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:
# a = "Kat", [10, 20]
# print(a)

# –í–æ–ø—Ä–æ—Å 11: –ö–∞–∫ –æ–±—ä—è–≤–∏—Ç—å –ø—É—Å—Ç–æ–π –∫–æ—Ä—Ç–µ–∂?

# #–û—Ç–≤–µ—á–∞—Ç—å:
#–ß—Ç–æ–±—ã –æ–±—ä—è–≤–∏—Ç—å –ø—É—Å—Ç–æ–π –∫–æ—Ä—Ç–µ–∂ –≤ Python, –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å:my_tuple = ().
# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:
# my_tuple = ()
# print(my_tuple) 

# –í–æ–ø—Ä–æ—Å 12: –ú–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ—Ä—Ç–µ–∂–∞ –ø–æ—Å–ª–µ –µ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è?

# #–û—Ç–≤–µ—á–∞—Ç—å:
#–î–∞, –≤ Python –∑–Ω–∞—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ—Ä—Ç–µ–∂–∞ –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ—Å–ª–µ –µ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è. –ö–æ—Ä—Ç–µ–∂–∏ –æ—Å—Ç–∞—é—Ç—Å—è –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–º–∏
# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:
# my_tuple = (1, 2, 3)
# my_tuple[0] = 4  

# –í–æ–ø—Ä–æ—Å ‚Ññ 13: –ß—Ç–æ —Ç–∞–∫–æ–µ —Ü–∏–∫–ª for –≤ Python?

# #–û—Ç–≤–µ—á–∞—Ç—å:
#–¶–∏–∫–ª –≤ Python –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –æ–ø–µ—Ä–∞—Ü–∏–π –Ω–∞–¥ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –≤ –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–º –æ–±—ä–µ–∫—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä —Å–ø–∏—Å–∫–µ, –∫–æ—Ä—Ç–µ–∂–µ –∏–ª–∏ —Å—Ç—Ä–æ–∫–µ. –û–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±–∏—Ä–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ –æ–¥–Ω–æ–º—É –∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ä–∞–±–æ—á–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –∫–∞–∂–¥—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º –≤–Ω—É—Ç—Ä–∏ —Ü–∏–∫–ª–∞.
# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:

# numbers = [1, 2, 3, 4, 5]


# for number in numbers:
#     print(number)


# –í–æ–ø—Ä–æ—Å ‚Ññ 14: –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä —Ä–∞–∑—Ä—ã–≤–∞ –≤ —Ü–∏–∫–ª–µ?

# #–û—Ç–≤–µ—á–∞—Ç—å:
#–û–ø–µ—Ä–∞—Ç–æ—Ä —Ä–∞–∑—Ä—ã–≤–∞ –≤ —Ü–∏–∫–ª–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ü–∏–∫–ª–∞ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–π —á–∞—Å—Ç–∏ –∫–æ–¥–∞ –∑–∞ —Ü–∏–∫–ª–æ–º
# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:

# numbers = [1, 2, 3, 4, 5]
# for number in numbers:
#     if number == 3:
#         break
#     print(number)

# –í–æ–ø—Ä–æ—Å ‚Ññ 15: –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä continue –≤ —Ü–∏–∫–ª–µ?

# #–û—Ç–≤–µ—á–∞—Ç—å:
# –í–æ—Ç –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞continue–≤ —Ü–∏–∫–ª–µ –Ω–∞
# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:
# 
# numbers = [1, 2, 3, 4, 5]
# for number in numbers:
#     if number == 3:
#         continue
#     print(number)



# üá∑üá∫ ru
# –§—É–Ω–∫—Ü–∏—è 1. –°–∞–º—ã–π —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–π —Å–∏–º–≤–æ–ª
# –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—émost_common_char, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∏–±–æ–ª–µ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–π —Å–∏–º–≤–æ–ª –≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ.

# def most_common_char(string):
#     char_count = {}
#     for char in string:
#         if char in char_count:
#             char_count[char] += 1
#         else:
#             char_count[char] = 1
#     most_common = ''
#     max_count = 0
#     for char, count in char_count.items():
#         if count > max_count:
#             most_common = char
#             max_count = count
#     return most_common

# text = "abracadabra"
# result = most_common_char(text)
# print("–ù–∞–∏–±–æ–ª–µ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–π —Å–∏–º–≤–æ–ª:", result)


# –§—É–Ω–∫—Ü–∏—è 2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã.
# –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é is_valid_email, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç True/False –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —ç—Ç–æ –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –∏–ª–∏ –Ω–µ—Ç.

# –ü—Ä–∞–≤–∏–ª–∞ –æ—Å–º–æ—Ç—Ä–∞:
# –î–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –±—É–∫–≤—ã –∏–ª–∏ —Ü–∏—Ñ—Ä—ã
# @ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–¥—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å —Ö–æ—Ç—è –±—ã 1 –±—É–∫–≤–∞ –∏–ª–∏ —Ü–∏—Ñ—Ä–∞
# –ü–æ—Å–ª–µ —Å–∏–º–≤–æ–ª–∞ @ –∏ –ø–µ—Ä–µ–¥ —Ç–æ—á–∫–æ–π (.) –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 1 —Å–∏–º–≤–æ–ª–∞.
# –ü–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç–æ—á–∫–∏ (.) –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 1 —Å–∏–º–≤–æ–ª–∞.


# def most_common_char(string):
#     char_count = {}
#     for char in string:
#         if char in char_count:
#             char_count[char] += 1
#         else:
#             char_count[char] = 1
#     most_common = max(char_count, key=char_count.get)
#     return most_common






